{"version":3,"sources":["CellGrid.js","ColorPicker.js","SizePicker.js","App.js","serviceWorker.js","index.js"],"names":["CellGrid","style","this","props","borderCollapse","grid","map","row","r","cell","c","border","overflow","onClick","Card","verticalAlign","margin","width","selected","height","backgroundColor","color","g","b","square","outlined","elevation","React","Component","SmallAvatar","withStyles","theme","root","palette","background","paper","Avatar","ColorPicker","onChange","state","createMuiTheme","overrides","MuiSlider","thumb","boxShadow","fade","track","rail","title","value","display","flexFlow","ThemeProvider","makeSliderTheme","Typography","flex","paddingLeft","paddingRight","Slider","step","max","valueLabelDisplay","e","n","Input","target","inputProps","min","type","toString","slice","toUpperCase","ExpansionPanel","ExpansionPanelSummary","expandIcon","MuiAvatar","colorDefault","MuiIconButton","Grid","container","spacing","justify","alignItems","item","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","Tooltip","arrow","IconButton","size","onColorize","stopPropagation","fontSize","onFill","minWidth","rgbToHex","ExpansionPanelDetails","makeSlider","setState","SizePicker","rows","cols","Box","OutlinedInput","Button","variant","onApply","App","color_picker","Array","from","length","rules","console","log","newGrid","AppBar","position","Toolbar","sizeChangeHandler","textAlign","flexGrow","Divider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e9555cd1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card } from \"@material-ui/core\";\n// import CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\n\nclass CellGrid extends React.Component {\n  render() {\n    return (\n      <table\n        style={{\n          ...this.props.style,\n          borderCollapse: \"collapse\",\n          // tableLayout: \"fixed\",\n          // width: \"100%\",\n        }}\n      >\n        {this.props.grid.map((row, r) => (\n          <tr>\n            {row.map((cell, c) => (\n              <td\n                style={{\n                  border: \"1px solid #D0D0D0D0\",\n                  overflow: \"visible\",\n                }}\n                onClick={() => this.props.onClick(r, c)}\n              >\n                <Card\n                  style={{\n                    verticalAlign: \"middle\",\n                    margin: \"auto\",\n                    width: cell.selected ? \"100%\" : \"90%\",\n                    height: cell.selected ? \"100%\" : \"90%\",\n                    backgroundColor:\n                      \"rgb(\" +\n                      cell.color.r +\n                      \",\" +\n                      cell.color.g +\n                      \",\" +\n                      cell.color.b +\n                      \")\",\n                  }}\n                  square\n                  outlined\n                  elevation={cell.selected ? 4 : 0}\n                >\n                  {/* <Box flexShrink={1} width=\"auto\" height=\"auto\">\n                    {cell.selected ? <CheckRoundedIcon /> : <div />}\n                  </Box> */}\n                </Card>\n              </td>\n            ))}\n          </tr>\n        ))}\n      </table>\n    );\n  }\n}\n\nexport default CellGrid;\n","import React from \"react\";\nimport {\n  Slider,\n  Avatar,\n  Typography,\n  Input,\n  Grid,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  IconButton,\n  Badge,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { createMuiTheme, withStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport FormatColorRoundedIcon from \"@material-ui/icons/FormatColorFill\";\nimport ColorizeRoundedIcon from \"@material-ui/icons/ColorizeRounded\";\n\nconst SmallAvatar = withStyles((theme) => ({\n  root: {\n    width: \"16pt\",\n    height: \"16pt\",\n    border: `2pt solid #A0A0A0A0`,\n    backgroundColor: theme.palette.background.paper,\n  },\n}))(Avatar);\n\nclass ColorPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      onChange: props.onChange,\n    };\n    this.state = {\n      r: props.color.r,\n      g: props.color.g,\n      b: props.color.b,\n    };\n  }\n\n  makeSliderTheme(color) {\n    return createMuiTheme({\n      overrides: {\n        MuiSlider: {\n          thumb: {\n            color: color,\n            \"&$focusVisible,&:hover\": {\n              boxShadow: `0px 0px 0px 8px ${fade(color, 0.16)}`,\n              \"@media (hover: none)\": {\n                boxShadow: \"none\",\n              },\n            },\n            \"&$active\": {\n              boxShadow: `0px 0px 0px 14px ${fade(color, 0.16)}`,\n            },\n          },\n          track: {\n            color: color,\n          },\n          rail: {\n            color: color,\n          },\n        },\n      },\n    });\n  }\n\n  makeSlider(title, value, color, onChange) {\n    return (\n      <div style={{ display: \"flex\", flexFlow: \"row\" }}>\n        <ThemeProvider theme={this.makeSliderTheme(color)}>\n          <span\n            style={{\n              // flex: \"4 1 auto\",\n              verticalAlign: \"baseline\",\n              width: \"32pt\",\n            }}\n          >\n            <Typography>{title}</Typography>\n          </span>\n          <span\n            style={{\n              verticalAlign: \"baseline\",\n              flex: \"1 1 auto\",\n              paddingLeft: \"16pt\",\n              paddingRight: \"16pt\",\n            }}\n          >\n            <Slider\n              step={1}\n              value={value}\n              max={255}\n              valueLabelDisplay=\"auto\"\n              onChange={(e, n) => {\n                onChange(n);\n              }}\n            />\n          </span>\n          <Input\n            style={{\n              verticalAlign: \"baseline\",\n              width: \"36pt\",\n            }}\n            value={value}\n            margin=\"dense\"\n            onChange={(e) => {\n              onChange(e.target.value);\n            }}\n            inputProps={{\n              step: 1,\n              min: 0,\n              max: 255,\n              type: \"number\",\n            }}\n          />\n        </ThemeProvider>\n      </div>\n    );\n  }\n\n  rgbToHex(r, g, b) {\n    return (\n      \"#\" +\n      ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1).toUpperCase()\n    );\n  }\n\n  render() {\n    return (\n      <ExpansionPanel\n        square\n        style={{ boxShadow: \"none\", border: \"none\" }}\n      >\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <ThemeProvider\n            theme={createMuiTheme({\n              overrides: {\n                MuiAvatar: {\n                  colorDefault: {\n                    color:\n                      this.state.r + this.state.g + this.state.b <= 128 * 3\n                        ? \"#EEEEEED0\"\n                        : \"#505050D0\",\n                    backgroundColor:\n                      \"rgb(\" +\n                      this.state.r +\n                      \",\" +\n                      this.state.g +\n                      \",\" +\n                      this.state.b +\n                      \")\",\n                  },\n                },\n                MuiIconButton: {\n                  root: {\n                    color:\n                      (3 * this.state.r + 4 * this.state.g + this.state.b) >>\n                        3 <=\n                      128\n                        ? \"#EEEEEED0\"\n                        : \"#505050D0\",\n                  },\n                },\n              },\n            })}\n          >\n            <Grid\n              container\n              spacing={2}\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <Badge\n                  overlap=\"circle\"\n                  anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                  }}\n                  // color=\"primary\"\n                  badgeContent={\n                    <ThemeProvider\n                      theme={createMuiTheme({\n                        overrides: {\n                          MuiIconButton: {\n                            root: { color: \"#202020D0\" },\n                          },\n                        },\n                      })}\n                    >\n                      <Tooltip arrow title=\"Color Selected Cells\">\n                        <SmallAvatar>\n                          <IconButton\n                            size=\"small\"\n                            onClick={(e) => {\n                              this.props.onColorize(\n                                this.state.r,\n                                this.state.g,\n                                this.state.b\n                              );\n                              e.stopPropagation();\n                            }}\n                          >\n                            <ColorizeRoundedIcon fontSize=\"small\" />\n                          </IconButton>\n                        </SmallAvatar>\n                      </Tooltip>\n                    </ThemeProvider>\n                  }\n                >\n                  <Tooltip arrow title=\"Fill Grid\">\n                    <Avatar\n                      style={{\n                        margin: \"4pt\",\n                      }}\n                    >\n                      <IconButton\n                        onClick={(e) => {\n                          this.props.onFill(\n                            this.state.r,\n                            this.state.g,\n                            this.state.b\n                          );\n                          e.stopPropagation();\n                        }}\n                      >\n                        <FormatColorRoundedIcon />\n                      </IconButton>\n                    </Avatar>\n                  </Tooltip>\n                </Badge>\n              </Grid>\n              <Grid item>\n                <Typography style={{ minWidth: \"5em\" }}>\n                  {this.rgbToHex(this.state.r, this.state.g, this.state.b)}\n                </Typography>\n              </Grid>\n            </Grid>\n          </ThemeProvider>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <div style={{ width: \"100%\", margin: \"0pt 4pt 4pt 4pt\" }}>\n            <div>\n              {this.makeSlider(\n                \"Red\",\n                this.state.r,\n                \"rgb(\" + this.state.r + \",0,0)\",\n                (n) => {\n                  this.setState({ r: n });\n                  this.props.onChange(n, this.state.g, this.state.b);\n                }\n              )}\n            </div>\n            <div>\n              {this.makeSlider(\n                \"Green\",\n                this.state.g,\n                \"rgb(0,\" + this.state.g + \",0)\",\n                (n) => {\n                  this.setState({ g: n });\n                  this.props.onChange(this.state.r, n, this.state.b);\n                }\n              )}\n            </div>\n            <div>\n              {this.makeSlider(\n                \"Blue\",\n                this.state.b,\n                \"rgb(0,0,\" + this.state.b + \")\",\n                (n) => {\n                  this.setState({ b: n });\n                  this.props.onChange(this.state.r, this.state.g, n);\n                }\n              )}\n            </div>\n          </div>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React from \"react\";\nimport { OutlinedInput, Box, Button } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nclass SizePicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      r: props.size.rows,\n      c: props.size.cols,\n    };\n  }\n  render() {\n    return (\n      <Box display=\"flex\" alignItems=\"center\">\n        {/* <Typography style={{ margin: \"8pt\" }}>Size:</Typography> */}\n        <OutlinedInput\n          size=\"small\"\n          style={{\n            width: \"64pt\",\n          }}\n          value={this.state.r}\n          margin=\"dense\"\n          onChange={(e) =>\n            this.setState({\n              r: e.target.value,\n            })\n          }\n          inputProps={{\n            step: 1,\n            min: 1,\n            max: 128,\n            type: \"number\",\n          }}\n        />\n        <CloseIcon style={{ margin: \"2pt 2pt 2pt 2pt\" }} />\n        <OutlinedInput\n          size=\"small\"\n          style={{\n            width: \"64pt\",\n          }}\n          value={this.state.c}\n          margin=\"dense\"\n          onChange={(e) =>\n            this.setState({\n              c: e.target.value,\n            })\n          }\n          inputProps={{\n            step: 1,\n            min: 1,\n            max: 128,\n            type: \"number\",\n          }}\n        />\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          style={{ margin: \"4pt\" }}\n          size=\"large\"\n          onClick={() => this.props.onApply(this.state.r, this.state.c)}\n        >\n          Apply\n        </Button>\n      </Box>\n    );\n  }\n}\n\nexport default SizePicker;\n","import React from \"react\";\nimport \"./App.css\";\nimport { AppBar, Toolbar, Card, Divider } from \"@material-ui/core\";\nimport CellGrid from \"./CellGrid\";\nimport ColorPicker from \"./ColorPicker\";\nimport SizePicker from \"./SizePicker\";\n\nconst initRows = 24,\n  initCols = 32;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      size: {\n        rows: initRows,\n        cols: initCols,\n      },\n      color_picker: {\n        r: 255,\n        g: 255,\n        b: 255,\n      },\n      grid: Array.from({ length: initRows }, () =>\n        Array.from({ length: initCols }, () => ({\n          color: { r: 255, g: 255, b: 255 },\n          selected: false,\n        }))\n      ),\n      rules: [],\n    };\n  }\n\n  sizeChangeHandler(r, c) {\n    console.log(this.state);\n\n    var newGrid = this.state.grid;\n    if (r < this.state.size.rows) {\n      newGrid = newGrid.slice(0, r);\n    } else if (r > this.state.size.rows) {\n      newGrid = [\n        ...newGrid,\n        ...Array.from({ length: r - this.state.size.rows }, () =>\n          Array.from({ length: c }, () => ({\n            color: {\n              r: this.state.color_picker.r,\n              g: this.state.color_picker.g,\n              b: this.state.color_picker.b,\n            },\n            selected: false,\n          }))\n        ),\n      ];\n    }\n\n    if (c < this.state.size.cols) {\n      newGrid = newGrid.map((row) => row.slice(0, c));\n    } else if (c > this.state.size.cols) {\n      newGrid = newGrid.map((row) => [\n        ...row,\n        ...Array.from({ length: c - this.state.size.cols }, () => ({\n          color: {\n            r: this.state.color_picker.r,\n            g: this.state.color_picker.g,\n            b: this.state.color_picker.b,\n          },\n          selected: false,\n        })),\n      ]);\n    }\n\n    this.setState({\n      size: { rows: r, cols: c },\n      grid: newGrid,\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ height: \"100vh\", display: \"flex\", flexFlow: \"row\" }}>\n        <span style={{ height: \"100vh\", flex: \"8 8 auto\" }}>\n          <div style={{ display: \"flex\", flexFlow: \"column\", height: \"100%\" }}>\n            <div style={{ flex: \"0 1 auto\" }}>\n              <AppBar position=\"sticky\" color=\"transparent\" elevation={2}>\n                <Toolbar>\n                  <SizePicker\n                    size={this.state.size}\n                    onApply={(r, c) => this.sizeChangeHandler(r, c)}\n                  />\n                </Toolbar>\n              </AppBar>\n            </div>\n            <div style={{ flex: \"1 1 auto\" }}>\n              <CellGrid\n                grid={this.state.grid}\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  textAlign: \"center\",\n                  verticalAlign: \"middle\",\n                  flexGrow: 1,\n                }}\n                onClick={(r, c) => {\n                  var newGrid = this.state.grid.map((row) => row.slice());\n                  newGrid[r][c].selected = !newGrid[r][c].selected;\n                  console.log(newGrid);\n                  this.setState({\n                    grid: newGrid,\n                  });\n                }}\n              />\n            </div>\n          </div>\n        </span>\n        <span style={{ flex: \"2 2 auto\" }}>\n          <Card\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              margin: \"auto\",\n            }}\n            elevation={4}\n          >\n            <ColorPicker\n              color={this.state.color_picker}\n              onChange={(r, g, b) =>\n                this.setState({ color_picker: { r: r, g: g, b: b } })\n              }\n              onFill={(r, g, b) => {\n                this.setState({\n                  grid: this.state.grid.map((row) =>\n                    row.map((cell) => ({\n                      ...cell,\n                      color: { r: r, g: g, b: b },\n                    }))\n                  ),\n                });\n              }}\n              onColorize={(r, g, b) => {\n                this.setState({\n                  grid: this.state.grid.map((row) =>\n                    row.map((cell) =>\n                      cell.selected\n                        ? { ...cell, color: { r: r, g: g, b: b } }\n                        : cell\n                    )\n                  ),\n                });\n              }}\n            />\n            <Divider style={{ width: \"96%\", margin: \"auto\" }} />\n          </Card>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}